{%- raw %}
name: ❄️ Nix CI ❄️

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  NIX_CHANNEL: nixpkgs=channel:nixos-22.11
  NIX_INSTALL_URL: https://releases.nixos.org/nix/nix-2.13.3/install

jobs:
  # This job checks if an identical workflow is being triggered by different
  # event and skips it. For instance there is no need to run the same pipeline
  # twice for pull_request and push for identical commit sha.
  pre_job:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.3.0
        with:
          skip_after_successful_duplicate: 'true'
          concurrent_skipping: same_content
          do_not_skip: '["pull_request", "workflow_dispatch", "schedule"]'
  nix-checks:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest

    steps:
      - uses: cachix/install-nix-action@v20
        with:
          nix_path: ${{ env.NIX_CHANNEL }}
          install_url: ${{ env.NIX_INSTALL_URL }}
      # Remove bellow step if you do not want to use Cachix - Nix binary cache.
      # For OpenSource projects there is free 5GB of storage.
      # https://www.cachix.org
      - name: Setup Cachix ❄️
        uses: cachix/cachix-action@v12
        with:
          name: fastapi-mvc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - uses: actions/checkout@v3
      - name: Check format
        run: nix-shell -p nixpkgs-fmt --run 'nixpkgs-fmt --check .'
      - name: Run nix flake check
        run: nix flake check
      - name: Run metrics checks
        run: nix run .#metrics
      - name: Run mypy checks
        run: nix run .#mypy
      - name: Run tests
        run: nix run .#test
  nix-build:
    needs: pre_job
    if: ${{ needs.pre_job.outputs.should_skip != 'true' }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ '38', '39', '310' ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Nix ❄️
        uses: cachix/install-nix-action@v20
        with:
          extra_nix_config: "system-features = nixos-test benchmark big-parallel kvm"
          nix_path: ${{ env.NIX_CHANNEL }}
          install_url: ${{ env.NIX_INSTALL_URL }}
      # Remove bellow step if you do not want to use Cachix - Nix binary cache.
      # For OpenSource projects there is free 5GB of storage.
      # https://www.cachix.org
      - name: Setup Cachix ❄️
        uses: cachix/cachix-action@v12
        with:
          name: fastapi-mvc
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - name: {% endraw %}Build {{project_name}}
        run: nix build .#{{project_name}}-py{% raw %}${{ matrix.python-version }}
{%- endraw %}